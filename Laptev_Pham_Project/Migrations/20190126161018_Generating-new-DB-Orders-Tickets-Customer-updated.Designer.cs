// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Laptev_Pham_Project.Migrations
{
    [DbContext(typeof(FlightsDBContext))]
    [Migration("20190126161018_Generating-new-DB-Orders-Tickets-Customer-updated")]
    partial class GeneratingnewDBOrdersTicketsCustomerupdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Laptev_Pham_Project.Models.ArrivalCity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName");

                    b.HasKey("ID");

                    b.ToTable("ArrivalCity");
                });

            modelBuilder.Entity("Laptev_Pham_Project.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Laptev_Pham_Project.Models.DepartureCity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName");

                    b.HasKey("ID");

                    b.ToTable("DepartureCity");
                });

            modelBuilder.Entity("Laptev_Pham_Project.Models.Flight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArrivalCity");

                    b.Property<string>("ArrivalTime");

                    b.Property<string>("DepartureCity");

                    b.Property<string>("DepartureTime");

                    b.Property<bool>("Direct");

                    b.Property<string>("FlightName");

                    b.Property<int>("TicketPrice");

                    b.HasKey("ID");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("Laptev_Pham_Project.Models.Order", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("ID");

                    b.Property<float>("TotalSum");

                    b.HasKey("OrderNumber");

                    b.HasIndex("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Laptev_Pham_Project.Models.Ticket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArrivalTimeFrom");

                    b.Property<string>("ArrivalTimeTo");

                    b.Property<string>("DepartureTimeFrom");

                    b.Property<string>("DepartureTimeTo");

                    b.Property<int?>("OrderNumber");

                    b.Property<int>("Price");

                    b.Property<int>("TicketType");

                    b.Property<bool>("isRound");

                    b.HasKey("ID");

                    b.HasIndex("OrderNumber");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Laptev_Pham_Project.Models.Order", b =>
                {
                    b.HasOne("Laptev_Pham_Project.Models.Customer", "CustomerId")
                        .WithMany()
                        .HasForeignKey("ID");
                });

            modelBuilder.Entity("Laptev_Pham_Project.Models.Ticket", b =>
                {
                    b.HasOne("Laptev_Pham_Project.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
